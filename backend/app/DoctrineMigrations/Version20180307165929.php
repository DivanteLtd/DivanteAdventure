<?php

namespace Adventure\Migrations;

use Doctrine\DBAL\Migrations\AbstractMigration;
use Doctrine\DBAL\Schema\Schema;

/**
 * Class Version20180307165929
 */
class Version20180307165929 extends AbstractMigration
{
    /**
     * @param Schema $schema
     */
    public function up(Schema $schema)
    {
        // this up() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
        $this->addSql("create table agreement ( id int auto_increment primary key, name varchar(50) not null, description text not null, required tinyint(1) default 0 not null, priority tinyint(1) default 0 not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null ) charset=utf8");
        $this->addSql("create table contract ( id int auto_increment primary key, name varchar(50) not null, freedays tinyint default 0 null, special tinyint default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) charset=utf8");
        $this->addSql("create table department ( id int auto_increment primary key, name varchar(80) not null, description text null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) charset=utf8");
        $this->addSql("create table employee ( id int auto_increment primary key, email varchar(80) not null, name varchar(50) not null, lastname varchar(50) not null, photo varchar(255) null, phone varchar(50) null, car varchar(50) null, city varchar(50) null, remote tinyint(1) null, hired_at date null, hired_to date null, mood tinyint(1) default 1 not null, contract_id int null, manager tinyint(1) default 0 not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null, date_of_birth date null, constraint email unique (email), constraint FK_employee_contract foreign key (contract_id) references contract (id) on update cascade on delete set null ) charset=utf8;");
        $this->addSql("create table employee_agreement ( id int auto_increment primary key, employee_id int not null, agreement_id int not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint FK_employee_agreement_agreement foreign key (agreement_id) references agreement (id) on update cascade on delete cascade, constraint FK_employee_agreement_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_daysoff_period ( id int auto_increment primary key, employee_id int default 0 not null, date_from date default '0000-00-00' not null, date_to date default '0000-00-00' not null, freedays_repeat tinyint default 0 not null, freedays tinyint default 0 not null, daily_increase float default 0 not null, repeating tinyint default 0 not null, comment_system varchar(255) null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint FK_employee_daysoff_period_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_daysoff_request ( id int auto_increment primary key, period_id int not null, employee_id int not null, manager_id int null, comment text null, status tinyint(1) default 0 not null, accepted_at datetime null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null, constraint FK_employee_daysoff_request_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_daysoff_request_employee_2 foreign key (manager_id) references employee (id) on update cascade, constraint FK_employee_daysoff_request_employee_daysoff_period foreign key (period_id) references employee_daysoff_period (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_daysoff_request_day ( id int auto_increment primary key, request_id int default 0 not null, period_id int default 0 not null, employee_id int default 0 not null, manager_id int null, date date default '0000-00-00' not null, type tinyint default 0 not null, status tinyint default 0 not null, constraint FK_employee_daysoff_request_day_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_daysoff_request_day_employee_2 foreign key (manager_id) references employee (id) on update cascade, constraint FK_employee_daysoff_request_day_employee_daysoff_period foreign key (period_id) references employee_daysoff_period (id) on update cascade on delete cascade, constraint FK_employee_daysoff_request_day_employee_daysoff_request foreign key (request_id) references employee_daysoff_request (id) on update cascade on delete cascade ) charset=utf8;");
        $this->addSql("create table employee_department ( id int auto_increment primary key, employee_id int not null, department_id int not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint employee_id_department_id unique (employee_id, department_id), constraint FK_employee_department_department foreign key (department_id) references department (id) on update cascade on delete cascade, constraint FK_employee_department_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table fos_user ( id int auto_increment primary key, employee_id int null, username varchar(180) not null, username_canonical varchar(180) not null, email varchar(180) not null, email_canonical varchar(180) not null, enabled tinyint(1) not null, salt varchar(255) null, password varchar(255) not null, last_login datetime null, confirmation_token varchar(180) null, password_requested_at datetime null, roles longtext not null comment '(DC2Type:array)', google_id varchar(255) null, constraint UNIQ_957A647992FC23A8 unique (username_canonical), constraint UNIQ_957A6479A0D96FBF unique (email_canonical), constraint UNIQ_957A6479C05FB297 unique (confirmation_token), constraint FK_fos_user_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade ) collate=utf8_unicode_ci");
        $this->addSql("create table news ( id int auto_increment primary key, title varchar(255) not null, description text null, url varchar(255) null, important tinyint default 0 null, event_date datetime null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) collate=utf8_polish_ci");
        $this->addSql("create table position ( id int auto_increment primary key, parent_id int null, department_id int not null, name varchar(50) not null, background varchar(50) null, priority smallint(6) null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint FK_position_department foreign key (department_id) references department (id) on update cascade on delete cascade, constraint FK_position_position foreign key (parent_id) references position (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_position ( id int auto_increment primary key, employee_id int not null, position_id int not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint employee_id unique (employee_id), constraint FK_employee_position_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_position_position foreign key (position_id) references position (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table project ( id int auto_increment primary key, name varchar(50) not null, description text null, photo varchar(255) null, url varchar(255) null, started_at date null, ended_at date null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) charset=utf8");
        $this->addSql("create table employee_project ( id int auto_increment primary key, employee_id int not null, project_id int not null, hours smallint(6) null, started_at date null, ended_at date null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint employee_id_project_id unique (employee_id, project_id), constraint FK_employee_project_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_project_project foreign key (project_id) references project (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table refresh_tokens ( id int auto_increment primary key, refresh_token varchar(128) not null, username varchar(255) not null, valid datetime not null, constraint UNIQ_9BACE7E1C74F2195 unique (refresh_token) ) collate=utf8_unicode_ci");
        $this->addSql("create table skill_area ( id int auto_increment primary key, name varchar(80) not null, description text null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) charset=utf8");
        $this->addSql("create table employee_skill_area ( id int auto_increment primary key, employee_id int not null, skill_area_id int not null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint employee_id_skill_area_id unique (employee_id, skill_area_id), constraint FK__employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK__skill_area foreign key (skill_area_id) references skill_area (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table position_skill_area ( id int auto_increment primary key, position_id int not null, skill_area_id int not null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint position_id_skill_area_id unique (position_id, skill_area_id), constraint FK_position_skill_area_position foreign key (position_id) references position (id) on update cascade on delete cascade, constraint FK_position_skill_area_skill_area foreign key (skill_area_id) references skill_area (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table project_skill_area ( id int auto_increment primary key, project_id int not null, skill_area_id int not null, value_required float default 0 null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint project_id_skill_area_id unique (project_id, skill_area_id), constraint FK__project foreign key (project_id) references project (id) on update cascade on delete cascade, constraint FK_project_skill_area_skill_area foreign key (skill_area_id) references skill_area (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table skill ( id int auto_increment primary key, skill_area_id int not null, employee_id int null, name varchar(80) not null, description text null, required tinyint null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint FK_skill_employee foreign key (employee_id) references employee (id) on update cascade on delete set null, constraint FK_skill_skill_area foreign key (skill_area_id) references skill_area (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_skill ( id int auto_increment primary key, employee_id int not null, skill_id int not null, value double default 0 not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null, constraint employee_id_skill_id unique (employee_id, skill_id), constraint FK__skill foreign key (skill_id) references skill (id) on update cascade on delete cascade, constraint FK_employee_skill_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table employee_skill_history ( id int auto_increment primary key, employee_id int default 0 not null, skill_id int default 0 not null, value_old float default 0 not null, value_new float default 0 not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint FK_employee_skill_history_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_skill_history_skill foreign key (skill_id) references skill (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table position_skill ( id int auto_increment primary key, position_id int not null, skill_id int not null, value_averaged float default 0 null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint position_id_skill_id unique (position_id, skill_id), constraint FK_position_skill_position foreign key (position_id) references position (id) on update cascade on delete cascade, constraint FK_position_skill_skill foreign key (skill_id) references skill (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table tribe ( id int auto_increment primary key, name varchar(255) not null, description text null, photo varchar(255) null, url varchar(255) null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP ) charset=utf8");
        $this->addSql("create table employee_tribe ( id int auto_increment primary key, employee_id int not null, tribe_id int not null, role varchar(255) null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint employee_id_tribe_id unique (employee_id, tribe_id), constraint FK_employee_tribe_employee foreign key (employee_id) references employee (id) on update cascade on delete cascade, constraint FK_employee_tribe_tribe foreign key (tribe_id) references tribe (id) on update cascade on delete cascade ) charset=utf8");
        $this->addSql("create table project_tribe ( id int auto_increment primary key, project_id int not null, tribe_id int not null, created_at datetime default CURRENT_TIMESTAMP not null, updated_at datetime default CURRENT_TIMESTAMP not null on update CURRENT_TIMESTAMP, constraint project_id_tribe_id unique (project_id, tribe_id), constraint FK_project_tribe_project foreign key (project_id) references project (id) on update cascade on delete cascade, constraint FK_project_tribe_tribe foreign key (tribe_id) references tribe (id) on update cascade on delete cascade ) charset=utf8");

        $this->addSql('ALTER TABLE employee ADD private_phone VARCHAR(50) NOT NULL');
        $this->addSql('INSERT INTO contract (id, name, freedays, special) values (1, "B2B", 1, 0), (2, "UCP", 1, 0), (3, "UoP", 1, 1)');
    }

    /**
     * @param Schema $schema
     */
    public function down(Schema $schema)
    {
        // this down() migration is auto-generated, please modify it to your needs
        $this->abortIf($this->connection->getDatabasePlatform()->getName() !== 'mysql', 'Migration can only be executed safely on \'mysql\'.');
        $this->addSql('ALTER TABLE employee DROP private_phone');
    }
}
